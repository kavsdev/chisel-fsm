// Generated by CIRCT firtool-1.62.0
module fsm(
  input  clock,
         reset,
         io_in,
  output io_out
);

  reg [1:0] state;
  always @(posedge clock) begin
    if (reset)
      state <= 2'h0;
    else if (state == 2'h0) begin
      if (io_in)
        state <= 2'h1;
    end
    else if (state == 2'h1)
      state <= {io_in, 1'h0};
    else if (state == 2'h2 & ~io_in)
      state <= 2'h0;
  end // always @(posedge)
  assign io_out = state == 2'h2;
endmodule

